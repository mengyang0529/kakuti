name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - "web/**"
      - ".github/workflows/frontend-pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    env:                             # ← 受保护变量放这里
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"

      # 注入 Vite/构建所需环境变量（可从 Secrets 注入后端地址/Key）
      - name: Inject env for Vite
        run: |
          echo "VITE_BASE_PATH=/kakuti/" >> $GITHUB_ENV
          echo "VITE_API_BASE=${{ secrets.VITE_API_BASE }}" >> $GITHUB_ENV
          echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> $GITHUB_ENV
          echo "ROLLUP_SKIP_NODEJS_NATIVE=1" >> $GITHUB_ENV

      # 清理锁和缓存，绕过 npm 可选依赖 bug
      - name: Clean lock & cache
        run: |
          rm -f package-lock.json
          rm -rf node_modules
          npm cache clean --force || true

      # 安装依赖（用 npm install 而非 npm ci）
      - name: Install deps
        run: npm install --no-audit --no-fund --legacy-peer-deps

      # 兜底：若 rollup 原生包缺失则显式安装
      - name: Ensure rollup native (fallback)
        run: |
          npm ls @rollup/rollup-linux-x64-gnu || npm i -D @rollup/rollup-linux-x64-gnu

      # 构建
      - name: Build
        run: npm run build

      # 构建产物自检（dist 需存在且非空）
      - name: Sanity check dist
        run: |
          ls -la
          ls -la dist || true
          [ -d dist ] && [ "$(ls -A dist | wc -l)" -gt 0 ] || (echo "dist is empty!" && exit 1)

      # 上传工件；注意这里必须填仓库根相对路径 → web/dist
      - name: Prepare Pages artifact
        run: |
          rm -rf ../pages-dist
          mkdir -p ../pages-dist
          cp -r dist/* ../pages-dist/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages-dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

        
